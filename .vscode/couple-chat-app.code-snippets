{
	// Place your couple-chat-app workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	
	"React Component": {
		"scope": "javascript,typescript,javascriptreact,typescriptreact",
		"prefix": "rfc",
		"body": [
			"import React from 'react';",
			"",
			"const ${1:ComponentName} = () => {",
			"  return (",
			"    <div>",
			"      $2",
			"    </div>",
			"  );",
			"};",
			"",
			"export default ${1:ComponentName};"
		],
		"description": "Create a React functional component"
	},
	
	"Chat Message": {
		"scope": "javascript,typescript,javascriptreact,typescriptreact",
		"prefix": "chatmsg",
		"body": [
			"<Message",
			"  key={${1:message.id}}",
			"  message={${1:message}}",
			"  isOwn={${2:isCurrentUser}}",
			"  timestamp={${3:message.timestamp}}",
			"/>"
		],
		"description": "Insert a chat message component"
	}
}
